{"ast":null,"code":"var _jsxFileName = \"/Users/wjnirving/Desktop/dev/nology/artefact-api/src/components/Card/Card.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styles from \"./Card.module.scss\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Card = props => {\n  _s();\n\n  const {\n    objects,\n    index\n  } = props;\n  const API_URL = \"https://collectionapi.metmuseum.org/public/collection/v1/objects/\";\n  const [image, setImage] = useState(\"\");\n  const [sculpture, setSculpture] = useState({});\n  const [showInfo, setShowInfo] = useState(false);\n  const flipCard = showInfo ? styles.description : styles.opaque;\n  useEffect(() => {\n    const getSculpture = async theIndex => {\n      const string = `${API_URL}${objects[theIndex]}`;\n      return fetch(`${string}`).then(res => res.json()).then(jsonResponse => {\n        if (jsonResponse !== null) {\n          return jsonResponse;\n        } else {\n          return [];\n        }\n      });\n    };\n\n    const updateSculpture = async currentIndex => {\n      const apiObject = await getSculpture(currentIndex);\n      setSculpture(apiObject);\n    };\n\n    const updateImage = currentSculpture => {\n      if (Object.keys(sculpture).length > 1) {\n        if (sculpture.primaryImage.length > 1) {\n          setImage(sculpture.primaryImage);\n        } else {\n          setImage(sculpture.additionalImages[0]);\n        }\n      } else return \"\";\n    };\n\n    updateSculpture(index);\n    updateImage(sculpture);\n  }, [objects, index, sculpture]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.imgBox,\n      onClick: () => setShowInfo(!showInfo),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: flipCard,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"TITLE -\", sculpture.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"MEDIUM - \", sculpture.medium]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"DATE - \", sculpture.objectDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: \"\",\n        onerror: \"this.style.display='none'\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Card, \"HAFuHRqgevCdIdUj49ePu7C1kYI=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/wjnirving/Desktop/dev/nology/artefact-api/src/components/Card/Card.jsx"],"names":["React","styles","useState","useEffect","Card","props","objects","index","API_URL","image","setImage","sculpture","setSculpture","showInfo","setShowInfo","flipCard","description","opaque","getSculpture","theIndex","string","fetch","then","res","json","jsonResponse","updateSculpture","currentIndex","apiObject","updateImage","currentSculpture","Object","keys","length","primaryImage","additionalImages","imgBox","title","medium","objectDate"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styles from \"./Card.module.scss\";\nimport { useState, useEffect } from \"react\";\n\nconst Card = (props) => {\n  const { objects, index } = props;\n\n  const API_URL =\n    \"https://collectionapi.metmuseum.org/public/collection/v1/objects/\";\n\n  const [image, setImage] = useState(\"\");\n\n  const [sculpture, setSculpture] = useState({});\n\n  const [showInfo, setShowInfo] = useState(false);\n\n  const flipCard = showInfo ? styles.description : styles.opaque;\n\n  useEffect(() => {\n\n    const getSculpture = async (theIndex) => {\n      const string = `${API_URL}${objects[theIndex]}`;\n      return fetch(`${string}`)\n        .then((res) => res.json())\n        .then((jsonResponse) => {\n          if (jsonResponse !== null) {\n            return jsonResponse;\n          } else {\n            return [];\n          }\n        });\n    };\n  \n    const updateSculpture = async (currentIndex) => {\n      const apiObject = await getSculpture(currentIndex);\n      setSculpture(apiObject);\n    };\n  \n    const updateImage = (currentSculpture) => {\n      if (Object.keys(sculpture).length > 1) {\n        if (sculpture.primaryImage.length > 1) {\n          setImage(sculpture.primaryImage);\n        } else {\n          setImage(sculpture.additionalImages[0]);\n        }\n      } else return \"\";\n    };\n\n    updateSculpture(index);\n    updateImage(sculpture);\n  }, [objects, index, sculpture]);\n\n\n  return (\n    <>\n      <div className={styles.imgBox}\n      onClick={()=> setShowInfo(!showInfo)}>\n        <div className={flipCard}>\n          <p>TITLE -{sculpture.title}</p>\n          <p>MEDIUM - {sculpture.medium}</p>\n          <p>DATE - {sculpture.objectDate}</p>\n        </div>\n        <img src={image} alt=\"\" onerror=\"this.style.display='none'\" />\n      </div>\n    </>\n  );\n};\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}